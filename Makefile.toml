[tasks.conformance]
description = '''
Ensures the repository conforms to coding best practices, and only depends on libraries with
permissive licenses
'''
script = [
'''
set -e

if rustc --version | grep -qF 'nightly'; then
    # Rust fmt
    cargo fmt --all -- --write-mode=diff

    # Clippy - best practices
    [ "${CLIPPY_ENABLED}" = "false" ] || cargo clippy --all
fi

# Security vulnerability
cargo audit

# License compatibility
if cargo license | grep -qi '\bGPL\b'; then
    echo GPL license detected in a dependent crate. \
         This is not compatible with a closed-source commercial application.
    exit 1
fi
'''
]

[tasks.maintain]
description = '''
Performs the following code maintenance tasks:

* Format code: `cargo fmt --all`
* Update dependencies: `cargo update`
'''
dependencies = [
    "workspace-format",
    "workspace-dependencies-update",
    "workspace-outdated"
]

# === workspace-format === #

[tasks.workspace-format]
dependencies = [
    "workspace-format-pre",
    "workspace-format-do",
    "workspace-format-post"
]

[tasks.workspace-format-pre]
dependencies = ["ensure-repository-clean"]

[tasks.workspace-format-do]
command = "cargo"
args = ["fmt", "--all"]

[tasks.workspace-format-post]
condition_script = ["[ -n \"$(git status --porcelain)\" ]"]
script = ["git commit -am 'Format repository with Rustfmt.'"]

# === workspace-dependencies-update === #

[tasks.workspace-dependencies-update]
dependencies = [
    "workspace-dependencies-update-pre",
    "workspace-dependencies-update-do",
    "workspace-dependencies-update-post"
]

[tasks.workspace-dependencies-update-pre]
dependencies = ["ensure-repository-clean"]

[tasks.workspace-dependencies-update-do]
command = "cargo"
args = ["update"]

[tasks.workspace-dependencies-update-post]
condition_script = ["[ -n \"$(git status --porcelain)\" ]"]
script = [
    "git commit -am 'Upgraded workspace dependencies'",
    "echo Remember to run \\`cargo test\\` before pushing."
]

# === workspace-outdated === #

[tasks.workspace-outdated]
dependencies = [
    "workspace-outdated-pre",
    "workspace-outdated-do",
    "workspace-outdated-post"
]

[tasks.workspace-outdated-pre]

[tasks.workspace-outdated-do]
description = "Runs verify-outdated cargo plugin."
condition = { env = { "CARGO_MAKE_CRATE_HAS_DEPENDENCIES" = "TRUE" } }
command = "cargo"
args = ["outdated", "-w", "--root-deps-only", "--exit-code", "1"]

[tasks.workspace-outdated-post]

# === common === #

[tasks.ensure-repository-clean]
script = [
'''
[ -z "$(git status --porcelain)" ] || (
    echo "ERROR: Ensure the workspace is clean before running this task" 1>&2
    exit 1
)
exit $?
'''
]
